name: Check TODO Comments

on:
  pull_request:
    paths:
      - '**.go'

jobs:
  check-todo:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Check TODO Comments
        id: check
        run: |
          FILES=$(git diff --name-only --diff-filter=AM origin/${{ github.base_ref }} | grep '\.go$' | grep -v 'provider\.go')
          TODO_LINES=""
          for FILE in $FILES; do
            while IFS= read -r line; do
              TODO_LINES="$TODO_LINES\n$FILE#$line"
            done < <(grep -n 'TODO' "$FILE" | cut -f1 -d:)
          done
          echo "::set-output name=todo_lines::$TODO_LINES"
          if [ -n "$TODO_LINES" ]; then
            echo "Found TODO comments in the following files:"
            echo "$TODO_LINES"
            exit 1
          fi

      - name: Create comments
        if: failure()
        uses: actions/github-script@v5
        with:
          script: |
            const todo_lines = `${{ steps.check.outputs.todo_lines }}`.trim().split('\n');
            const issue_number = context.payload.pull_request.number;
            for (const todo_line of todo_lines) {
              const [file, line] = todo_line.split('#');
              const message = `TODO comment found in ${file} on line ${line}. Please remove the TODO comment.`;
              github.rest.pulls.createReviewComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: issue_number,
                body: message,
                commit_id: context.payload.pull_request.head.sha,
                path: file,
                line: parseInt(line, 10),
                side: 'RIGHT'
              });
            }